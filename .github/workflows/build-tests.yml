name: Builds

on:
  push: { branches: [main] }
  pull_request:
    paths-ignore:
      - '.github/**'

env:
  UNITY_LICENSE: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><root>\n    <License id=\"Terms\">\n        <MachineBindings>\n            <Binding Key=\"1\" Value=\"576562626572264761624c65526f7578\"/>\n            <Binding Key=\"2\" Value=\"576562626572264761624c65526f7578\"/>\n        </MachineBindings>\n        <MachineID Value=\"D7nTUnjNAmtsUMcnoyrqkgIbYdM=\"/>\n        <SerialHash Value=\"2033b8ac3e6faa3742ca9f0bfae44d18f2a96b80\"/>\n        <Features>\n            <Feature Value=\"33\"/>\n            <Feature Value=\"1\"/>\n            <Feature Value=\"12\"/>\n            <Feature Value=\"2\"/>\n            <Feature Value=\"24\"/>\n            <Feature Value=\"3\"/>\n            <Feature Value=\"36\"/>\n            <Feature Value=\"17\"/>\n            <Feature Value=\"19\"/>\n            <Feature Value=\"62\"/>\n        </Features>\n        <DeveloperData Value=\"AQAAAEY0LUJHUlgtWEQ0RS1aQ1dWLUM1SlctR0RIQg==\"/>\n        <SerialMasked Value=\"F4-BGRX-XD4E-ZCWV-C5JW-XXXX\"/>\n        <StartDate Value=\"2021-02-08T00:00:00\"/>\n        <UpdateDate Value=\"2021-02-09T00:34:57\"/>\n        <InitialActivationDate Value=\"2021-02-08T00:34:56\"/>\n        <LicenseVersion Value=\"6.x\"/>\n        <ClientProvidedVersion Value=\"2018.4.30f1\"/>\n        <AlwaysOnline Value=\"false\"/>\n        <Entitlements>\n            <Entitlement Ns=\"unity_editor\" Tag=\"UnityPersonal\" Type=\"EDITOR\" ValidTo=\"9999-12-31T00:00:00\"/>\n            <Entitlement Ns=\"unity_editor\" Tag=\"DarkSkin\" Type=\"EDITOR_FEATURE\" ValidTo=\"9999-12-31T00:00:00\"/>\n        </Entitlements>\n    </License>\n<Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\"><SignedInfo><CanonicalizationMethod Algorithm=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\"/><SignatureMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"/><Reference URI=\"#Terms\"><Transforms><Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/></Transforms><DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\"/><DigestValue>m0Db8UK+ktnOLJBtHybkfetpcKo=</DigestValue></Reference></SignedInfo><SignatureValue>o/pUbSQAukz7+ZYAWhnA0AJbIlyyCPL7bKVEM2lVqbrXt7cyey+umkCXamuOgsWPVUKBMkXtMH8L\n5etLmD0getWIhTGhzOnDCk+gtIPfL4jMo9tkEuOCROQAXCci23VFscKcrkB+3X6h4wEOtA2APhOY\nB+wvC794o8/82ffjP79aVAi57rp3Wmzx+9pe9yMwoJuljAy2sc2tIMgdQGWVmOGBpQm3JqsidyzI\nJWG2kjnc7pDXK9pwYzXoKiqUqqrut90d+kQqRyv7MSZXR50HFqD/LI69h68b7P8Bjo3bPXOhNXGR\n9YCoemH6EkfCJxp2gIjzjWW+l2Hj2EsFQi8YXw==</SignatureValue></Signature></root>"
  VERSION_CODE: ${{ github.run_number }} 
jobs:
  buildForAllPlatforms:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - test-project
        unityVersion:
          - 2020.2.0f1
        targetPlatform:
          #- StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          #- StandaloneWindows64 # Build a Windows 64-bit standalone.
          #- StandaloneLinux64 # Build a Linux 64-bit standalone.
          # - iOS # Build an iOS player.
           - Android # Build an Android .apk.
          #- WebGL # WebGL.
          #          - StandaloneWindows # Build a Windows standalone.
          #          - WSAPlayer # Build an Windows Store Apps player.
          #          - PS4 # Build a PS4 Standalone.
          #          - XboxOne # Build a Xbox One Standalone.
          #          - tvOS # Build to Apple's tvOS platform.
          #          - Switch # Build a Nintendo Switch player
    steps:
    
      ###########################
      #         Checkout        #
      ###########################
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: info
        run: sh "./info.sh"
      
      ###########################
      #          Cache          #
      ###########################
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      
      ###########################
      #          Build          
      ###########################
      - uses: ./
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: -profile SomeProfile -someBoolean -someValue exampleValue
     
      - uses: actions/setup-java@v1
        with: {java-version: 1.8}
      
      - name: Install NDK
        run:  echo "y" | wget https://dl.google.com/android/repository/android-ndk-r19c-linux-x86_64.zip
      - name: ZIP INSTALL
        run: sudo apt-get install p7zip-full 
      - name: UNZIP NDK
        run: unzip android-ndk-r19c-linux-x86_64.zip
        #sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;19.2.5345600" --sdk_root=${ANDROID_SDK_ROOT}
      - name: Output version code
        run: echo VERSION_CODE=${{ github.run_number }} > ./version.properties
      - name: Change Android versionCode and versionName
      
        run: chmod +x ./bump_android_version.sh && ./bump_android_version.sh buildGradleFilePath="./key.txt" newVersionCode=${{github.run_number}}
      - name: Build with Gradle
        run: |
          cd ./test-project/android
          sudo gradle wrapper --gradle-version 5.6.4 --stacktrace 
          echo "=================gradle wrappe======================="
          sudo chmod +x ./gradlew
          echo "====================chmod +x ./gradlew===================="
          sudo ./gradlew init
          echo "====================chmod +x ./gradlew===================="
          sudo ./gradlew clean
          echo "====================./gradlew init===================="
          sudo ./gradlew test
          echo "======================./gradlew test=================="
          sudo ./gradlew bundleRelease
          echo "=======================./gradlew bundleRelease================="
          sudo ./gradlew assembleRelease 
          echo "======================./gradlew assembleRelease=================="

        #- name: Checkout keystore repo
       # uses: actions/checkout@v2
      #  with:
      #    repository: ${{ secrets.KEYSTORE_GIT_REPOSITORY }}
       #   token: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}
       #   path: app/keystore

      #- name: Run tests and build release artifacts
       # run: |
       #   cd ./build/Android
        #  gradle wrapper --gradle-version 6.9
        #  ./gradlew init
        #  ./gradlew test
         # ./gradlew assembleRelease 
       #   ./gradlew bundleRelease


     # - name: Upload signed APK
     #   uses: actions/upload-artifact@v2
     #   with:
     #     name: app-release.apk
     #     path: app/build/outputs/apk/release/app-release.apk

     # - name: Upload AAB Bundle
     #   uses: actions/upload-artifact@v2
     #   with:
     #     name: app-release.aab
     #     path: app/build/outputs/bundle/release/app-release.aab

      ###########################
      #          Deploy        
      ###########################
      #- name: Upload to PlayMarket
      #  uses: r0adkll/upload-google-play@v1
      #  with:
      #    serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT }}
      #    packageName: com.DefaultCompany.ShopProject
      #    releaseFile: /home/runner/work/RENEW/RENEW/test-project/android/launcher/build/outputs/aab/release/app-release.aab
      #    track: internal
      #    userFraction: 0.1
      #    whatsNewDirectory: ./
      - name: info
        run: sh "./info.sh"
      - uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
           appId: ${{secrets.FIREBASE_APP_ID}}
           token: ${{secrets.FIREBASE_TOKEN}}
           groups: testers
           #file: build/Android/Android.apk
           file: /home/runner/work/RENEW/RENEW/test-project/android/launcher/build/outputs/apk/release/launcher-release.apk
           debug: true
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: internal
          path: /home/runner/work/RENEW/RENEW/test-project/android/launcher/build/outputs/bundle/release/launcher-release
                                                                   
      #- name: Upload to PlayMarket
       # uses: r0adkll/upload-google-play@v1
       # with:
       #   serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT }}
       #   packageName: com.DefaultCompany.ShopProject
       #   releaseFile: /home/runner/work/RENEW/RENEW/test-project/android/launcher/build/outputs/aab/release/app-release.aab
       #   track: internal
       #   userFraction: 0.1
       #   whatsNewDirectory: ./
          
      
      #- uses: asadmansr/Firebase-Test-Lab-Action@v1.0
      #  with:
      #    arg-spec: 'tests.yml:android-pixel-4'
      #  env:
      #    SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
